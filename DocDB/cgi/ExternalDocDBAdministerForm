#! /usr/bin/env perl

use lib ".";

#
#        Name: ExternalDocDBAdministerForm
# Description: Allows the administrator to add knowledge of other DocDBs.
#
#      Author: Eric Vaandering (ewv@fnal.gov)
#    Modified:
#

# Copyright 2001-2013 Eric Vaandering, Lynn Garren, Adam Bryant

#    This file is part of DocDB.

#    DocDB is free software; you can redistribute it and/or modify
#    it under the terms of version 2 of the GNU General Public License
#    as published by the Free Software Foundation.

#    DocDB is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with DocDB; if not, write to the Free Software
#    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA


use CGI qw(-nosticky);
use CGI::Untaint;
use DBI;

require "DocDBGlobals.pm";
require "AdministerElements.pm";
require "ResponseElements.pm";
require "Scripts.pm";
require "Security.pm";
require "Messages.pm";
require "Sorts.pm";

require "DBUtilities.pm";
require "HTMLUtilities.pm";
require "UntaintInput.pm";

require "SecuritySQL.pm";
require "XRefHTML.pm";
require "XRefSQL.pm";

$query = new CGI;  # Global for subroutines
$query -> autoEscape(0);
my $Untaint = CGI::Untaint -> new($query -> Vars);

my $Password = $Untaint -> extract(-as_printable => "password") || "";
my $Username = $Untaint -> extract(-as_printable => "admuser") || "";
my $Action = $Untaint -> extract(-as_printable => "admaction") || "";
my $Force = $Untaint -> extract(-as_printable => "admforce") || "";

my $SubForm = $Untaint -> extract(-as_printable => "subform") || "";

my $ExternalDocDBID = $Untaint -> extract(-as_integer => "externaldocdbs") || 0;
my $ProjectName = $Untaint -> extract(-as_safehtml => "project") || "";
my $Description = $Untaint -> extract(-as_safehtml => "desc") || "";
my $PublicURL = $Untaint -> extract(-as_safehtml => "puburl") || "";
my $PrivateURL = $Untaint -> extract(-as_safehtml => "privurl") || "";

$query -> delete_all();

if ($Password && $Username) {
  CreateConnection(-user => $Username, -password => $Password);
} else {
  CreateConnection(-type => "ro");
  if ($Action) {
    push @ErrorStack,"You must supply the admin username and password to administer";
  }
}

GetSecurityGroups();

print $query -> header( -charset => $HTTP_ENCODING );
DocDBHeader("Administer External DocDBs","",
             -scripts => ["PopUps","ExternalDocDBAdminDisable"]);

unless (CanAdminister()) {
  push @ErrorStack,"You are not allowed to access administrative functions.";
}

EndPage();

GetAllExternalDocDBs();

# Do administration

my $Abort = 0;

if ($SubForm eq "externaldocdb") {
  if ($Action eq "Delete") {
    my $Delete = $dbh -> prepare("delete from ExternalDocDB where ExternalDocDBID=?");
    $Delete  -> execute($ExternalDocDBID);
    push @ActionStack,"Deleted reference to external DocDB";
  } elsif ($Action eq "Modify") {
    if ($ProjectName) {
      push @ActionStack,"Updated the project name.";
      my $Update = $dbh->prepare("update ExternalDocDB set Project=? where ExternalDocDBID=?");
      $Update -> execute($ProjectName,$ExternalDocDBID);
    }
    if ($Description) {
      push @ActionStack,"Updated the description.";
      my $Update = $dbh->prepare("update ExternalDocDB set Description=? where ExternalDocDBID=?");
      $Update -> execute($Description,$ExternalDocDBID);
    }
    if ($PrivateURL) {
      push @ActionStack,"Updated the private URL.";
      my $Update = $dbh->prepare("update ExternalDocDB set PrivateURL=? where ExternalDocDBID=?");
      $Update -> execute($PrivateURL,$ExternalDocDBID);
    }
    if ($PublicURL) {
      push @ActionStack,"Updated the public URL.";
      my $Update = $dbh->prepare("update ExternalDocDB set PublicURL=? where ExternalDocDBID=?");
      $Update -> execute($PublicURL,$ExternalDocDBID);
    }
  } elsif ($Action eq "New") {
    push @ActionStack,"New external DocDB for $ProjectName added";
    my $Insert = $dbh -> prepare("insert into ExternalDocDB (Project,Description,PrivateURL,PublicURL) values (?,?,?,?)");
    $Insert -> execute($ProjectName,$Description,$PrivateURL,$PublicURL);
  } else {
    push @WarnStack,"No valid action was specified.";
  }
}

if (@ActionStack) {
  ClearExternalDocDBs();
  GetAllExternalDocDBs();
  ActionReport();
}

EndPage();

print "<p>This form allows you to administer which instances of DocDB your DocDB knows about.
       Begin by
       selecting an action for what you want to administer.  Depending on the
       action you select, the additional selections you can  make are enabled.
       If you select <strong>Modify</strong> any attributes you select or
       change are changed in the DB. If you leave something blank, it will not be
       changed. </p>\n";

print "<p>Note that deleting and then re-entering with the same information is
       not the same as modifying. Everything in the DB is tied together with
       invisible ID numbers.</p>\n";

print "<p>In all cases, you must supply the <i>database</i> username and
       password for the administrator account to make any changes.</p>\n";

print "<hr/>\n";

### Event Modification

print "<h4>Administer External DocDB Information</h4>\n";

print $query -> start_multipart_form('POST',"$ExternalDocDBAdministerForm",
                                     "name=\"externaldocdb\" id=\"externaldocdb\"");
print "<table class=\"LowPaddedTable CenteredTable\">\n";
print "<tr>\n";
print "<td colspan=\"3\">\n";
 AdministerActions(-form => "externaldocdb");
 print $query -> hidden(-name => "subform",   -default => "externaldocdb");
print "</td>\n";
print "</tr>\n";

print "<tr>\n";
print "<td rowspan=\"5\">\n";
 ExternalDocDBSelect(-disabled => true, -format => "full");
print "</td>\n";
print "<td>\n";
 TextField(-name => "project", -disabled => "true", -helptext => "Project", -helplink => "extdocdb");
print "</td>\n";
print "</tr>\n";

print "<tr>\n";
print "<td>\n";
 TextField(-name => "desc", -disabled => "true", -helptext => "Description", -helplink => "extdocdb");
print "</td>\n";
print "</tr>\n";

print "<tr>\n";
print "<td>\n";
 TextField(-name => "puburl", -disabled => "true", -helptext => "Public URL", -helplink => "extdocdb");
print "</td>\n";
print "</tr>\n";

print "<tr>\n";
print "<td>\n";
 TextField(-name => "privurl", -disabled => "true", -helptext => "Private URL", -helplink => "extdocdb");
print "</td>\n";
print "</tr>\n";

print "<tr>\n";
print "<td>\n";
 AdminRegardless();
print "</td>\n";
print "</tr>\n";

print "<tr>\n";
print "<td colspan=\"2\" class=\"SubmitCell\">\n";
 AdministratorPassword();
 print "&nbsp;";
 print $query -> submit (-value => "Change External DocDB Info");
print "</td>\n";
print "</tr>\n";

print "</table>\n";
print $query -> end_multipart_form;

print "<hr/>\n";

DocDBNavBar();
DocDBFooter($DBWebMasterEmail,$DBWebMasterName);
