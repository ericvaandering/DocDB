#! /usr/bin/env perl

use lib ".";

#
#        Name: ShowDocument
# Description: Display a document, its metadata, links to other versions and links to the files
#
#      Author: Eric Vaandering (ewv@fnal.gov)
#    Modified: Eric Vaandering (ewv@fnal.gov)

# Copyright 2001-2017 Eric Vaandering, Lynn Garren, Adam Bryant

#    This file is part of DocDB.

#    DocDB is free software; you can redistribute it and/or modify
#    it under the terms of version 2 of the GNU General Public License
#    as published by the Free Software Foundation.

#    DocDB is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with DocDB; if not, write to the Free Software
#    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

use CGI;
use CGI::Untaint;
use DBI;

require "DocDBGlobals.pm";
require "ResponseElements.pm";
require "SecuritySQL.pm";
require "DocumentSQL.pm";
require "RevisionSQL.pm";
require "FSUtilities.pm";
require "HTMLUtilities.pm";
require "UntaintInput.pm";
require "Security.pm";
require "Scripts.pm";
require "SQLChecks.pm";

require "RevisionHTML.pm";

$query = new CGI;  # Global for subroutines
$query -> autoEscape(0);
my $Untaint = CGI::Untaint -> new($query -> Vars);

   $DocumentID = $Untaint -> extract(-as_typedint => "docid") || 0;
   $Version = $Untaint -> extract(-as_typedint => "version") || undef;
   $AsOf = $Untaint -> extract(-as_safehtml => "asof") || undef;
my $OutFormat = $Untaint -> extract(-as_safehtml => "outformat") || "HTML";
   $OutFormat =~ tr/[a-z]/[A-Z]/;
my $StyleSheet = $Untaint -> extract(-as_safehtml => "stylesheet") || "";

unless ($DocumentID) {
  push @ErrorStack,"You are must supply a document number!";
}

$dbh   = DBI->connect('DBI:mysql:'.$db_name.':'.$db_host,$db_rouser,$db_ropass);

GetSecurityGroups();

FetchDocument($DocumentID);

if (defined $Version && defined $AsOf) {
  push @ErrorStack,"You may not specify both a version and date.";
}

my $DocRevID;
if (defined $Version) {
  if ($Version eq "") { # Still get this from form with blank version
    $Version = $Documents{$DocumentID}{NVersions};
  }
  $DocRevID = &FetchRevisionByDocumentAndVersion($DocumentID,$Version);
} elsif (defined $AsOf) {
  if (&CheckSQLDate($AsOf)) {
    $DocRevID = &FetchRevisionByDocumentAndDate($DocumentID,$AsOf);
    $Version  = $DocRevisions{$DocRevID}{VERSION};
  } else {
    push @ErrorStack,"The as-of date must be specifed in the form YYYY-MM-DD.";
  }
} else {
  $Version = $Documents{$DocumentID}{NVersions};
  $DocRevID = &FetchRevisionByDocumentAndVersion($DocumentID,$Version);
}

my $PageTitle = "$ShortProject-doc-$DocumentID-v$Version: Not authorized";
if (&CanAccess($DocumentID,$Version)) {
  $PageTitle = "$ShortProject-doc-$DocumentID-v$Version: $DocRevisions{$DocRevID}{Title}";
} else {
  push @ErrorStack,"You do not have permission to view this document (or it does not exist).";
}

# Print appropriate header

if ($OutFormat eq 'XML') {
  require "XMLOutput.pm";
  unless ($NoXMLHead) {
    print XMLHeader({-stylesheet => $StyleSheet, });
  }
  NewXMLOutput();
} else {
  print $query -> header( -charset => $HTTP_ENCODING );
  DocDBHeader($PageTitle,"$Project Document $DocumentID-v$Version",-scripts => ["PopUps"]);
}

unless ($DocRevID) { # Probably never executed since CanAccess fails.
  push @ErrorStack,"This document does not exist.";
}

# Print appropriate body

if ($OutFormat eq 'XML') {
  my %XMLDisplay = ("All" => $TRUE);
  my $DocumentXML = DocumentXMLOut( {-docid   => $DocRevisions{$DocRevID}{DOCID},
                                     -version => $DocRevisions{$DocRevID}{Version},
                                     -display => \%XMLDisplay,
                                    } );
  if ($DocumentXML) {
    $DocumentXML -> paste(last_child => $DocDBXML);
  }
} else {
  EndPage();
  PrintRevisionInfo($DocRevID, -showversions => 1);
}

if ($OutFormat eq 'HTML') {
  DocDBNavBar();
  DocDBFooter($DBWebMasterEmail,$DBWebMasterName);
} elsif ($OutFormat eq 'XML') {
  print GetXMLOutput();
}
