#! /usr/bin/env perl

use lib ".";

#
#        Name: WatchDocument
# Description: Change preferences for what/when to be notified of document
#              changes in e-mail.
#
#      Author: Eric Vaandering (ewv@fnal.gov)

# Copyright 2001-2018 Eric Vaandering, Lynn Garren, Adam Bryant

#    This file is part of DocDB.

#    DocDB is free software; you can redistribute it and/or modify
#    it under the terms of version 2 of the GNU General Public License
#    as published by the Free Software Foundation.

#    DocDB is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with DocDB; if not, write to the Free Software
#    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

use CGI;
use CGI::Untaint;
use DBI;

require "DocDBGlobals.pm";
require "HTMLUtilities.pm";
require "UntaintInput.pm";
require "ResponseElements.pm";
require "EmailSecurity.pm";
require "NotificationSQL.pm";
require "DocumentHTML.pm";
require "Security.pm";

$query = new CGI;  # Global for subroutines
$query -> autoEscape(0);
my $Untaint = CGI::Untaint -> new($query -> Vars);
$dbh   = DBI->connect('DBI:mysql:'.$db_name.':'.$db_host,$db_rwuser,$db_rwpass);

# Collect parameters

my $DocumentID = $Untaint -> extract(-as_integer => "docid") || 0;
my $UserName = $Untaint -> extract(-as_safehtml => "username") || "";
my $Password = $Untaint -> extract(-as_printable => "password") || "";
my $EmailUserID;

$UserName =~ s/\s+//g;
$Password =~ s/\s+//g;

# Start the page

print $query -> header( -charset => $HTTP_ENCODING );
&DocDBHeader("Watching Document"); # Prob need specialized header

# Check for valid user

if ($Password) {
  $EmailUserID = &ValidateEmailUser($UserName,$Password);
} elsif ($UserValidation eq "certificate" || $UserValidation eq "shibboleth" || $UserValidation eq "FNALSSO") {
  $EmailUserID = FetchEmailUserID();
}

if ($EmailUserID) {
  &FetchEmailUser($EmailUserID);
} else {
  push @ErrorStack,"The username/password pair or certificate you supplied is
                    invalid. Please try again or contact an administrator. If
                    you don't have a personal account, you need to
                    <a href=\"$EmailLogin\">set one up.</a>";
}

EndPage();

# Everything is OK, display the page

my $DocumentLink = &DocumentLink(-docid => $DocumentID, -noversion => $TRUE);

print SmartHTML({-text => "An e-mail will be sent to $EmailUser{$EmailUserID}{Name}
       ($EmailUser{$EmailUserID}{EmailAddress}) when Document $DocumentID changes."});
print "<p/>\n";

&InsertEmailDocumentImmediate(-emailuserid => $EmailUserID, -docid => $DocumentID);

&DocDBNavBar;
&DocDBFooter($DBWebMasterEmail,$DBWebMasterName);

