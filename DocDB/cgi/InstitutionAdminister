#! /usr/bin/env perl

use lib ".";

#
# Description: This script is called by AdministerForm and does administration
#              on Institutions in the DB. This script adds, modifies and deletes
#              institutions. It will not delete institutions if there are authors
#              associated with that institution.
#
#      Author: Eric Vaandering (ewv@fnal.gov)
#    Modified:

# Copyright 2001-2013 Eric Vaandering, Lynn Garren, Adam Bryant

#    This file is part of DocDB.

#    DocDB is free software; you can redistribute it and/or modify
#    it under the terms of version 2 of the GNU General Public License
#    as published by the Free Software Foundation.

#    DocDB is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with DocDB; if not, write to the Free Software
#    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

use CGI;
use CGI::Untaint;
use DBI;

require "DocDBGlobals.pm";
require "ResponseElements.pm";
require "Security.pm";
require "HTMLUtilities.pm";
require "UntaintInput.pm";
require "AuthorSQL.pm";
require "AuthorHTML.pm";
require "Messages.pm";

$query = new CGI;  # Global for subroutines
$query -> autoEscape(0);
my $Untaint = CGI::Untaint -> new($query -> Vars);

@ErrorStack = ();
@WarnStack  = ();

# Parameters to script

my $Password = $Untaint -> extract(-as_printable => "password") || "";
my $Username = $Untaint -> extract(-as_printable => "admuser") || "";
my $Action = $Untaint -> extract(-as_printable => "admaction") || "";

my $InstitutionID = $Untaint -> extract(-as_integer => "inst") || 0;
my $LongName = $Untaint -> extract(-as_safehtml => "longdesc") || "";
my $ShortName = $Untaint -> extract(-as_safehtml => "shortdesc") || "";

$dbh   = DBI->connect('DBI:mysql:'.$db_name.':'.$db_host,$Username,$Password);

unless ($dbh) {
  push @ErrorStack,$Msg_AdminNoConnect;
}
print $query -> header( -charset => $HTTP_ENCODING );
&DocDBHeader("Modified List of Institutions");

&EndPage(@ErrorStack);

unless (&CanAdminister) {
  push @ErrorStack,$Msg_AdminNoLogin;
}
&EndPage(@ErrorStack);

&GetInstitutions;

if      ($Action eq "Delete") { # Delete institutions
  @AuthorIDs = &GetInstitutionAuthors($InstitutionID);
  if (!$InstitutionID) {
    push @ErrorStack,$Msg_ModInstEmpty;
  } elsif (@AuthorIDs) {
    print "<b>This institution has authors that must be deleted first:</b><br>\n";
    &AuthorsByInstitution($InstitutionID);
    push @ErrorStack,$Msg_DelInstWAuthors;
  } else {
    my $InstitutionDelete = $dbh -> prepare("delete from Institution where InstitutionID=?");
    $InstitutionDelete -> execute($InstitutionID);
    print "<b>The institution has been deleted.</b><br>\n";
  }
} elsif ($Action eq "Modify") { # Modify institutions
  unless ($InstitutionID) {
    push @ErrorStack,$Msg_ModInstEmpty;
  }
  &EndPage(@ErrorStack);

# Deal with name changes

  if ($ShortName) {
    print "<b>Updating short institution name.</b><br>\n";
    my $InstitutionUpdate = $dbh->prepare(
       "update Institution set ShortName=? where InstitutionID=?");
    $InstitutionUpdate -> execute($ShortName,$InstitutionID);
  }
  if ($LongName) {
    print "<b>Updating long institution name.</b><br>\n";
    my $InstitutionUpdate = $dbh->prepare(
       "update Institution set LongName=? where InstitutionID=?");
    $InstitutionUpdate -> execute($LongName,$InstitutionID);
  }

} elsif ($Action eq "New") { # Create new institutions
  print "<b>Adding a new institution.</b><br>\n";
  my $InstitutionInsert = $dbh->prepare(
   "insert into Institution (InstitutionID,ShortName,LongName) values (0,?,?)");

  $InstitutionInsert -> execute($ShortName,$LongName);
  $InstitutionID = $InstitutionInsert -> {mysql_insertid}; # Works with MySQL only
} else {
  push @ErrorStack,"No valid action was specified.";
}

# For modify or new fetch institution information and display.

ClearInstitutions();
if ($Action eq "Modify" || $Action eq "New") {
  &FetchInstitution($InstitutionID);
  print "<p><b>Here are the results of your modification:<br>\n";
  print "Short institution name: $Institutions{$InstitutionID}{SHORT}<br>\n";
  print "Long institution name:  $Institutions{$InstitutionID}{LONG}<br>\n";
  print "</b><p>\n";
}

print "<p>\n";

&WarnPage(@WarnStack);
&EndPage(@ErrorStack);

&DocDBNavBar;
&DocDBFooter($DBWebMasterEmail,$DBWebMasterName);

exit;
