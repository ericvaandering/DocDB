#! /usr/bin/env perl
#
# Author Eric Vaandering (ewv@fnal.gov)

# When managing several instances or even multiple interfaces into a single 
# instance (e.g. private-with-certs, public, private-readonly) keeping all the
# scripts and files at the same version and up-to-date can be a hassle.

# This script is designed to be run on install and during upgrades (major and
# minor). It creates links to the scripts and .pm files stored in a central 
# location. This area should not be accessible from the web. 

# INSTRUCTIONS:
# Change to the directory where you want to install the scripts (e.g. /var/www/cgi-bin/DocDB) 
# and run this script and answer the questions. The path asked for is the central location of your
# DocDB installation as checked out from CVS. (/blah/DocDB/cgi/). If you answer "Y" to the question
# about being a Public install, links to certain scripts will be skipped since those are not needed
# for the public version of DocDB.

# This script creates a file named .DocDBSetup which you can copy to a new 
# directory before running the script, which will set up the new directory just
# like previous ones. (You can also change settings from that default.)

# You can also use this with the CSS and JS directories too (it just links to all the files
# in a directory), but since there are no project customizations in the JS directory and the
# customizations in the CSS directory have the project in the file name, it's probably
# easier just to link the js/ or css  directory or set the path  ($(JS/CSS)Directory and
# $(JS/CSS)URLPath in  ProjectGlobals.pm) to the correct location.

# Your web server must be setup to execute links in cgi-bin areas and follow
# links in HTML areas, which is often not the default setup.

# Usage: answer the questions. Your answers are stored for the next invocation.

# Copyright 2001-2009 Eric Vaandering, Lynn Garren, Adam Bryant

#    This file is part of DocDB.

#    DocDB is free software; you can redistribute it and/or modify
#    it under the terms of version 2 of the GNU General Public License 
#    as published by the Free Software Foundation.

#    DocDB is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with DocDB; if not, write to the Free Software
#    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

$AnswerFile = ".DocDBSetup";

my @PublicIgnore = ("AddFiles", "AddFilesForm", "AdministerForm", "AuthorAdd",
"AuthorAddForm", "AuthorAdminister", "CertificateApplyForm", "ConfirmTalkHint",
"DeleteConfirm", "DeleteDocument", "DocTypeAdminister", "DocumentAddForm",
"EmailAdminister", "EmailAdministerForm", "EmailLogin",
"EventAdministerForm", "GroupAdminister", "GroupAdministerForm",
"InstitutionAdminister", "JournalAdminister", "KeywordAdministerForm",
"KeywordGroupAdminister", "KeywordListAdminister", "MajorTopicAdminister",
"MeetingModify", "ModifyHome", "ProcessDocumentAdd", "SelectEmailPrefs",
"SelectGroups", "SelectPrefs", "SessionModify", "SetGroups", "SetPrefs",
"SignoffChooser", "SignRevision", "WatchDocument");

my @TemplateIgnore = ("ProjectGlobals.pm.template",
"ProjectMessages.pm.template", "ProjectHelp.xml.template",
"ProjectRoutines.pm.template", "README","ProjectGlobals.pm",
"ProjectMessages.pm", "ProjectHelp.xml", "ProjectRoutines.pm");

# Open file from previous invocations

my %Answers = ();

open ANSWERS,$AnswerFile;
while (my $Line = <ANSWERS>) {
  my ($Key,$Value) = split /\s+/,$Line;
  $Answers{$Key} = $Value;
}  

print "This script is designed to be run on install and during upgrades (major and minor).\n";
print "It creates links to the scripts and .pm files stored in a central location.\n"; 
print "This is most useful when managing several instances of DocDB.\n"; 
print "Read the comments at the beginning of the script for more information.\n\n";

# Get input from user

print "Is this a publicly accessible install (Y/N)";
if ($Answers{Public}) {
  print " [$Answers{Public}] ";
}  
print "? ";
my $Public = <STDIN>;
chomp $Public;

unless ($Public) {
  $Public = $Answers{Public};
}  

$Public =~ tr/[A-Z]/[a-z]/;

print "Full path to CGI files";
if ($Answers{Path}) {
  print " [$Answers{Path}]";
}  
print "? ";
my $Path = <STDIN>;
chomp $Path;

unless ($Path) {
  $Path = $Answers{Path};
}  

# Write answers to file to save

open ANSWERS,">".$AnswerFile;
print ANSWERS "Public $Public\n";
print ANSWERS "Path $Path\n";
close ANSWERS;

# Figure out what files to ignore

my %Ignore = ();
my %PublicIgnore = ();

foreach my $File (@TemplateIgnore) {
  $Ignore{$File} = 1;
}

if ($Public eq "y") {
  foreach my $File (@PublicIgnore) {
    $Ignore{$File} = 1;
    $PublicIgnore{$File} = 1;
  }
}   

# Link Files

opendir DIRECTORY,"$Path";

while (my $File = readdir DIRECTORY) {
  my $FullFile = $Path."/".$File;
  my $FirstChar = substr $File,0,1;
  if ($FirstChar eq ".")  {next;}
  unless (-f $FullFile)   {next;}
  if     ($PublicIgnore{$File}) {
    unlink $File;
  }
  if ($Ignore{$File}) {
    next;
  }
  print "Linking $FullFile\n";
  system ("/bin/ln -sf $FullFile .");
}
 
closedir DIRECTORY; 
